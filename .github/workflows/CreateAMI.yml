name: Packer File

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: packer-runner

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Zip Repo
        run: zip -r webapp.zip ./ -x /.git\* -x /.github\* -x /packer\*

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        with:
          version: '1.8.x'

      - name: Packer init
        run: packer init ./packer/ami.pkr.hcl

      - name: Packer validate
        run: packer validate ./packer/ami.pkr.hcl

      - name: Packer build
        run: packer build ./packer/ami.pkr.hcl


      - name: Configure AWS Demo Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEMO_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEMO_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
      - name: Update Autoscaling group
        id: update-asg
        run: |
          ami_id=$(aws ec2 describe-images --owners 377562592179 --filters "Name=name, Values=NodeApp_*" --output text --query 'sort_by(Images, &CreationDate)[-1].ImageId')
          lt_name=$(aws ec2 describe-launch-templates --query 'LaunchTemplates[?starts_with(LaunchTemplateName, `asg_launch_config`)].LaunchTemplateName' --output text)
          aws ec2 create-launch-template-version --launch-template-name "$lt_name" --source-version 1 --launch-template-data "{\"ImageId\":\"$ami_id\"}"
          lt_version=$(aws ec2 describe-launch-template-versions --launch-template-name $lt_name --query 'reverse(sort_by(LaunchTemplateVersions, &CreateTime)[].VersionNumber) | [0]' --output text)
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name autoscaling_group --launch-template LaunchTemplateName=$lt_name,Version=$lt_version
          aws autoscaling start-instance-refresh --auto-scaling-group-name autoscaling_group --preferences MinHealthyPercentage=90,InstanceWarmup=60 --strategy Rolling

